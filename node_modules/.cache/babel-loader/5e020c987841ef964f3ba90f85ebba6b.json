{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/ContactList/ContactsList.jsx\";\nimport { Component } from 'react';\nimport { List } from './ContactsList.styled';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ContactsList = ({\n  contacts\n}) => {\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: contacts.map(({\n      id,\n      name,\n      number\n    }) => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(ItemText, {\n        children: [name, \": \", number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactsList;\nContactsList.propTypes = {\n  contactsState: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.number.isRequired\n  })).isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"names":["Component","List","PropTypes","jsxDEV","_jsxDEV","ContactsList","contacts","children","map","id","name","number","ListItem","ItemText","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","contactsState","arrayOf","shape","string","isRequired","$RefreshReg$"],"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/ContactList/ContactsList.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { List } from './ContactsList.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactsList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <ItemText>\n            {name}: {number}\n          </ItemText>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n\nContactsList.propTypes = {\n  contactsState: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,IAAI,QAAQ,uBAAuB;AAC5C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,oBACEF,OAAA,CAACH,IAAI;IAAAM,QAAA,EACFD,QAAQ,CAACE,GAAG,CAAC,CAAC;MAAEC,EAAE;MAAEC,IAAI;MAAEC;IAAO,CAAC,kBACjCP,OAAA,CAACQ,QAAQ;MAAAL,QAAA,eACPH,OAAA,CAACS,QAAQ;QAAAN,QAAA,GACNG,IAAI,EAAC,IAAE,EAACC,MAAM;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC,GAHER,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIP,CACX;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACC,EAAA,GAZWb,YAAY;AAczBA,YAAY,CAACc,SAAS,GAAG;EACvBC,aAAa,EAAElB,SAAS,CAACmB,OAAO,CAC9BnB,SAAS,CAACoB,KAAK,CAAC;IACdb,EAAE,EAAEP,SAAS,CAACqB,MAAM,CAACC,UAAU;IAC/Bd,IAAI,EAAER,SAAS,CAACqB,MAAM,CAACC,UAAU;IACjCb,MAAM,EAAET,SAAS,CAACS,MAAM,CAACa;EAC3B,CAAC,CACH,CAAC,CAACA;AACJ,CAAC;AAAC,IAAAN,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module"}