{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst idName = nanoid;\n// const idNum = nanoid;\n\nexport class ContactForm extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          htmlFor: idName,\n          children: \"Contact Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: idName,\n          type: \"text\",\n          name: \"name\",\n          pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\"\n          // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          ,\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: \"Add contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","nanoid","jsxDEV","_jsxDEV","idName","ContactForm","render","Form","action","children","Label","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","Input","id","type","name","pattern","title","required"],"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { nanoid } from 'nanoid/non-secure';\n\nconst idName = nanoid;\n// const idNum = nanoid;\n\nexport class ContactForm extends Component {\n  render() {\n    return (\n      <Form action=\"\">\n        <div>\n          <Label htmlFor={idName}>Contact Name</Label>\n          <Input\n            id={idName}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </div>\n\n        <button type=\"button\">Add contact</button>\n      </Form>\n    );\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,MAAM,GAAGH,MAAM;AACrB;;AAEA,OAAO,MAAMI,WAAW,SAASL,SAAS,CAAC;EACzCM,MAAMA,CAAA,EAAG;IACP,oBACEH,OAAA,CAACI,IAAI;MAACC,MAAM,EAAC,EAAE;MAAAC,QAAA,gBACbN,OAAA;QAAAM,QAAA,gBACEN,OAAA,CAACO,KAAK;UAACC,OAAO,EAAEP,MAAO;UAAAK,QAAA,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC5CZ,OAAA,CAACa,KAAK;UACJC,EAAE,EAAEb,MAAO;UACXc,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,OAAO,EAAC;UACR;UAAA;UACAC,KAAK,EAAC,wIAAwI;UAC9IC,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENZ,OAAA;QAAQe,IAAI,EAAC,QAAQ;QAAAT,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAEX;AACF"},"metadata":{},"sourceType":"module"}