{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/App.jsx\";\n// 2 - Книга контактів\n\n// Напиши застосунок зберігання контактів телефонної книги.\n\n// Крок 1\n\n// Застосунок повинен складатися з форми і списку контактів.\n// На поточному кроці реалізуй додавання імені контакту та відображення списку\n// контактів.Застосунок не повинен зберігати контакти між різними\n// сесіями(оновлення сторінки).\n\n// Використовуйте цю розмітку інпуту з вбудованою валідацією для\n// імені контакту.\n\n// <input\n//   type=\"text\"\n//   name=\"name\"\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces.\n// For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n// />\n\n// Стан, що зберігається в батьківському компоненті <App>, обов'язково\n// повинен бути наступного вигляду, додавати нові властивості не можна.\n\n// state = {\n//   contacts: [],\n//   name: ''\n// }\n\n// Кожен контакт повинен бути об'єктом з властивостями name та id.\n// Для генерації ідентифікаторів використовуй будь - який відповідний пакет,\n//   наприклад nanoid.Після завершення цього кроку, застосунок повинен виглядати\n//    приблизно так.\n\n// component preview\n\nimport { Component } from 'react';\nimport { ContactForm } from './Form/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      name: ''\n    };\n    this.handleAddContact = newContact => {\n      const isExist = this.state.contacts.find(contact => contact.name === newContact.name);\n      if (isExist) {\n        alert(`${newContact.name} is already in contacts.`);\n        return;\n      }\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        };\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 400,\n        marginLeft: 400,\n        marginRight: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        title: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.handleAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","ContactForm","jsxDEV","_jsxDEV","App","constructor","args","state","contacts","name","handleAddContact","newContact","isExist","find","contact","alert","setState","prevState","render","style","width","marginLeft","marginRight","children","Title","title","fileName","_jsxFileName","lineNumber","columnNumber","onAddContact"],"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/App.jsx"],"sourcesContent":["// 2 - Книга контактів\n\n// Напиши застосунок зберігання контактів телефонної книги.\n\n// Крок 1\n\n// Застосунок повинен складатися з форми і списку контактів.\n// На поточному кроці реалізуй додавання імені контакту та відображення списку\n// контактів.Застосунок не повинен зберігати контакти між різними\n// сесіями(оновлення сторінки).\n\n// Використовуйте цю розмітку інпуту з вбудованою валідацією для\n// імені контакту.\n\n// <input\n//   type=\"text\"\n//   name=\"name\"\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces.\n// For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n// />\n\n// Стан, що зберігається в батьківському компоненті <App>, обов'язково\n// повинен бути наступного вигляду, додавати нові властивості не можна.\n\n// state = {\n//   contacts: [],\n//   name: ''\n// }\n\n// Кожен контакт повинен бути об'єктом з властивостями name та id.\n// Для генерації ідентифікаторів використовуй будь - який відповідний пакет,\n//   наприклад nanoid.Після завершення цього кроку, застосунок повинен виглядати\n//    приблизно так.\n\n// component preview\n\nimport { Component } from 'react';\nimport { ContactForm } from './Form/Form';\n\nexport class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleAddContact = newContact => {\n    const isExist = this.state.contacts.find(\n      contact => contact.name === newContact.name\n    );\n    if (isExist) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div style={{ width: 400, marginLeft: 400, marginRight: 400 }}>\n        <Title title=\"Phonebook\" />\n        <ContactForm onAddContact={this.handleAddContact} />\n      </div>\n    );\n  }\n}\n"],"mappings":";AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,OAAO,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KACjCC,KAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC;IAAA,KAEDC,gBAAgB,GAAGC,UAAU,IAAI;MAC/B,MAAMC,OAAO,GAAG,IAAI,CAACL,KAAK,CAACC,QAAQ,CAACK,IAAI,CACtCC,OAAO,IAAIA,OAAO,CAACL,IAAI,KAAKE,UAAU,CAACF,IACzC,CAAC;MACD,IAAIG,OAAO,EAAE;QACXG,KAAK,CAAE,GAAEJ,UAAU,CAACF,IAAK,0BAAyB,CAAC;QACnD;MACF;MAEA,IAAI,CAACO,QAAQ,CAACC,SAAS,IAAI;QACzB,OAAO;UACLT,QAAQ,EAAE,CAAC,GAAGS,SAAS,CAACT,QAAQ,EAAEG,UAAU;QAC9C,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;EAAA;EAEDO,MAAMA,CAAA,EAAG;IACP,oBACEf,OAAA;MAAKgB,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,UAAU,EAAE,GAAG;QAAEC,WAAW,EAAE;MAAI,CAAE;MAAAC,QAAA,gBAC5DpB,OAAA,CAACqB,KAAK;QAACC,KAAK,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3B1B,OAAA,CAACF,WAAW;QAAC6B,YAAY,EAAE,IAAI,CAACpB;MAAiB;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC;EAEV;AACF"},"metadata":{},"sourceType":"module"}