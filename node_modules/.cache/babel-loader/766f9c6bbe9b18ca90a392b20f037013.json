{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/App.jsx\";\n// 2 - Книга контактів\n\n// Напиши застосунок зберігання контактів телефонної книги.\n\n// Крок 1\n\n// Застосунок повинен складатися з форми і списку контактів.\n// На поточному кроці реалізуй додавання імені контакту та відображення списку\n// контактів.Застосунок не повинен зберігати контакти між різними\n// сесіями(оновлення сторінки).\n\n// Використовуйте цю розмітку інпуту з вбудованою валідацією для\n// імені контакту.\n\n// <input\n//   type=\"text\"\n//   name=\"name\"\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces.\n// For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n// />\n\n// Стан, що зберігається в батьківському компоненті <App>, обов'язково\n// повинен бути наступного вигляду, додавати нові властивості не можна.\n\n// state = {\n//   contacts: [],\n//   name: ''\n// }\n\n// Кожен контакт повинен бути об'єктом з властивостями name та id.\n// Для генерації ідентифікаторів використовуй будь - який відповідний пакет,\n//   наприклад nanoid.Після завершення цього кроку, застосунок повинен виглядати\n//    приблизно так.\n\n// component preview\n\nimport { Component } from 'react';\nimport { ContactForm } from './Form/Form';\nimport { ContactsList } from './ContactList/ContactsList';\nimport { Filter } from './Filter/Filter';\n// import { Title } from './Title/Title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [{\n        id: 'id-1',\n        name: 'Rosie Simpson',\n        number: '459-12-56'\n      }, {\n        id: 'id-2',\n        name: 'Hermione Kline',\n        number: '443-89-12'\n      }, {\n        id: 'id-3',\n        name: 'Eden Clements',\n        number: '645-17-79'\n      }, {\n        id: 'id-4',\n        name: 'Annie Copeland',\n        number: '227-91-26'\n      }],\n      filter: '',\n      name: '',\n      number: ''\n    };\n    this.handleAddContact = newContact => {\n      const isExist = this.state.contacts.find(contact => contact.name === newContact.name);\n      if (isExist) {\n        alert(`${newContact.name} is already in contacts.`);\n        return;\n      }\n      this.setState(prevState => {\n        return {\n          contacts: [...prevState.contacts, newContact]\n        };\n      });\n    };\n    this.handleFilter = e => {\n      this.setState({\n        filter: e.target.value\n      });\n    };\n    this.handleDeleteContact = () => {};\n  }\n  render() {\n    const {\n      contacts\n    } = this.state;\n    const ItemContacts = contacts.filter(contact => contact.name.toLowerCase().includes(this.state.filter));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 500,\n        marginLeft: 400,\n        marginRight: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Phonebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactForm, {\n        onAddContact: this.handleAddContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Contacts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Filter, {\n        value: this.state.filter,\n        onFilter: this.handleFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsList, {\n        contacts: ItemContacts,\n        onDeleteContact: this.handleDeleteContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["Component","ContactForm","ContactsList","Filter","jsxDEV","_jsxDEV","App","constructor","args","state","contacts","id","name","number","filter","handleAddContact","newContact","isExist","find","contact","alert","setState","prevState","handleFilter","e","target","value","handleDeleteContact","render","ItemContacts","toLowerCase","includes","style","width","marginLeft","marginRight","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddContact","onFilter","onDeleteContact"],"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/App.jsx"],"sourcesContent":["// 2 - Книга контактів\n\n// Напиши застосунок зберігання контактів телефонної книги.\n\n// Крок 1\n\n// Застосунок повинен складатися з форми і списку контактів.\n// На поточному кроці реалізуй додавання імені контакту та відображення списку\n// контактів.Застосунок не повинен зберігати контакти між різними\n// сесіями(оновлення сторінки).\n\n// Використовуйте цю розмітку інпуту з вбудованою валідацією для\n// імені контакту.\n\n// <input\n//   type=\"text\"\n//   name=\"name\"\n//   pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//   pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n//   title=\"Name may contain only letters, apostrophe, dash and spaces.\n// For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//   required\n// />\n\n// Стан, що зберігається в батьківському компоненті <App>, обов'язково\n// повинен бути наступного вигляду, додавати нові властивості не можна.\n\n// state = {\n//   contacts: [],\n//   name: ''\n// }\n\n// Кожен контакт повинен бути об'єктом з властивостями name та id.\n// Для генерації ідентифікаторів використовуй будь - який відповідний пакет,\n//   наприклад nanoid.Після завершення цього кроку, застосунок повинен виглядати\n//    приблизно так.\n\n// component preview\n\nimport { Component } from 'react';\nimport { ContactForm } from './Form/Form';\nimport { ContactsList } from './ContactList/ContactsList';\nimport { Filter } from './Filter/Filter';\n// import { Title } from './Title/Title';\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleAddContact = newContact => {\n    const isExist = this.state.contacts.find(\n      contact => contact.name === newContact.name\n    );\n    if (isExist) {\n      alert(`${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  handleFilter = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  handleDeleteContact = () => {};\n\n  render() {\n    const { contacts } = this.state;\n    const ItemContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter)\n    );\n\n    return (\n      <div style={{ width: 500, marginLeft: 400, marginRight: 400 }}>\n        {/* <Title title=\"Phonebook\" /> */}\n        <h2>Phonebook</h2>\n        <ContactForm onAddContact={this.handleAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onFilter={this.handleFilter} />\n        <ContactsList\n          contacts={ItemContacts}\n          onDeleteContact={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}