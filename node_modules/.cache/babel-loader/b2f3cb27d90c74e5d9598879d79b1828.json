{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/Form/Form.jsx\";\nimport { Component } from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './Form.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst idName = nanoid;\n// const idNum = nanoid;\n\nexport const ContactForm = ({\n  onAddContact\n}) => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    action: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: idName,\n        children: \"Contact Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: idName,\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' \\\\-][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\"\n        // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        ,\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      children: \"Add contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactForm;\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["Component","nanoid","PropTypes","Form","Label","Input","Button","jsxDEV","_jsxDEV","idName","ContactForm","onAddContact","action","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","name","pattern","title","required","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/admin/Documents/GoIt/goit-react-hw-02-phonebook/src/components/Form/Form.jsx"],"sourcesContent":["import { Component } from 'react';\nimport { nanoid } from 'nanoid/non-secure';\nimport PropTypes from 'prop-types';\nimport { Form, Label, Input, Button } from './Form.styled';\n\nconst idName = nanoid;\n// const idNum = nanoid;\n\nexport const ContactForm = ({ onAddContact }) => {\n  return (\n    <Form action=\"\">\n      <div>\n        <Label htmlFor={idName}>Contact Name</Label>\n        <Input\n          id={idName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          // pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n\n      <Button type=\"button\">Add contact</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,MAAM,QAAQ,mBAAmB;AAC1C,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,KAAK,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGR,MAAM;AACrB;;AAEA,OAAO,MAAMS,WAAW,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAC/C,oBACEH,OAAA,CAACL,IAAI;IAACS,MAAM,EAAC,EAAE;IAAAC,QAAA,gBACbL,OAAA;MAAAK,QAAA,gBACEL,OAAA,CAACJ,KAAK;QAACU,OAAO,EAAEL,MAAO;QAAAI,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5CV,OAAA,CAACH,KAAK;QACJc,EAAE,EAAEV,MAAO;QACXW,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,MAAM;QACXC,OAAO,EAAC;QACR;QAAA;QACAC,KAAK,EAAC,wIAAwI;QAC9IC,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENV,OAAA,CAACF,MAAM;MAACc,IAAI,EAAC,QAAQ;MAAAP,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEX,CAAC;AAACO,EAAA,GAnBWf,WAAW;AAqBxBA,WAAW,CAACgB,SAAS,GAAG;EACtBf,YAAY,EAAET,SAAS,CAACyB,IAAI,CAACC;AAC/B,CAAC;AAAC,IAAAH,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module"}